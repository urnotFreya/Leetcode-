##给一个整数列表，和一个target值，找出列表中三数之和与target值最接近的情况，返回值为该三数之和
class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        res = 0
        if len(nums)<3: return res
        nums.sort()
        min_len = abs(target)+nums[-1]*3
        for k in range(len(nums)-2):
            if k>0 and nums[k]==nums[k-1]: continue
            left, right = k+1, len(nums)-1
            while left<right:
                sum1 = nums[k]+nums[left]+nums[right]
                sub = sum1-target
                if sub==0 :
                    return target
                if abs(sub) <= min_len:
                    min_len = abs(sub)
                    res = sum1
                right -= 1
                left += 1
                if abs(sub-(nums[right+1]-nums[right])) > abs(sub+nums[left]-nums[left-1]):
                    right +=1
                    while left<right and nums[left]==nums[left-1] : left += 1
                else:
                    left -= 1
                    while left<right and nums[right]==nums[right+1]: right -= 1  
        return res
